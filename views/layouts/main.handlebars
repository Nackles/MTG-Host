<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>MTG Host</title>

  {{!-- Styling --}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.css">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
  <link rel="stylesheet" href="/styles/styles.css" media="screen" title="no title" charset="utf-8">
  <link rel="stylesheet" href="/styles/mtghost.css" media="screen" title="no title" charset="utf-8">


</head>

<body>
  <div class="container">
    {{{body}}}
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
  <script src="/js/index.js"></script>
  <script src="/js/joinarena.js"></script>

  {{!-- Click handlers and initializations --}}
  <script>
    $(document).ready(function () {
      //Initialize Materialize elements
      $('.collapsible').collapsible();
      $('.modal').modal();

      // Before allowImgReset, clicking ANYWHERE in .collapsible would reset the carousel to the first image in an annoying enough way that users might not use the app - this fixed that by only allowing one .carousel initiialization.
      let allowImgReset = true;
      $(".collapsible").on("click", function () {
        if (allowImgReset === true) {
          $('.carousel').carousel();
          allowImgReset = false;
        }
      })

      // When you click a player's Add Token button, the modal opens and the Add Token modal's submit button recieves a data-name attribute = that player's ID.
      $(".modal-trigger").on("click", function () {
        console.log("What's THIS:", this)
        $("#token-spawner").attr("data-name", this.id)
        console.log("token spawner player id = " + $("#token-spawner").attr('data-name'))
      })

      // When the token-search button is clicked, ask the server about tokens and handlebars options into a selectable radio menu.
      $("#tokens-search").on("click", function () {
        // Token search term
        let searchFor = $("#search-for").val().trim();
        console.log("SEARCH FOR:", searchFor)

        $.get("/api/tokens/" + searchFor, function (data) {
          console.log("LOGED DATA:", data)
        })
      })

      //Now we have a selectable list of tokens.
      //When the add-token button is clicked, get the ID of the radio button selected and assign that token to the player id present in this button's player-name.
      $(document).on("click", "#token-spawner", function () {

        // Get the id of the player to add the token to
        let addToPlayer = $(this.data - name)
        // Get the id of the token by the checked radio token's value, which is set on-handlebars of the list.
        let addToken = $('input[name=group1]:checked', '#selected-token').val()

        // Make a post request to the server informing it that player addToPlayer now owns addToken.
        //app.post("/api/token_logs", function (req, res) {


        //})



      })

    })
  </script>
</body>

</html>