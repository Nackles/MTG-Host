<ul class="collapsible">
    {{#each players}}
    <li>
        <div class="collapsible-header"><i class="material-icons">place</i><span id="{{id}}-player">{{name}}</span> |
            <span id="{{id}}-life"></span>{{life}}</span></div>

        <div class="collapsible-body"><span>ENTER INTO THE TOKEN TRAY!</span>
            <div class="life-collection">
                <span id="{{id}}-life-change" class="right"><input type="submit" class="link-color" href="#"
                        value="Change Life"></span>
                <form action="#">
                    <p class="range-field">
                        <input type="range" id="{{id}}-life-range" min="-20" max="20" />
                    </p>
                </form>
                <a id="{{id}}-t-spawn" class="btn modal-trigger" href="#tokens-modal">Tokens +</a>
            </div>

            <p>Set the slider to life gained or lost, and press 'Life Change' to gain or lose that much
                life.</p>
            <div class="divider purple"></div>
            <h5 class="center-align">Token Tray</h5>

            <div id="{{id}}-tokens-active" class="container">
                <div class="carousel">
                    {{#each tokens}}
                    <div class="carousel-item {{name}}"><span id="{{name}}-{{@index}}">{{name}}</span><img
                            src="{{img}}">
                    </div>
                    {{/each}}
                </div>
            </div>

        </div>
    </li>
    {{/each}}
</ul>

<!-- Tokens -->
<div id="tokens-modal" class="modal">
    <div class="modal-content">
        <div class="dropdown">
            <button onclick="myFunction()" class="dropbtn">Dropdown</button>
            <div id="myDropdown" class="dropdown-content">
                <input type="text" placeholder="Search.." id="myInput" onkeyup="filterFunction()">
                {{#each token}}
                <a href="#spawn-token-{{id}}">{{this}}</a>
                {{/each}}
            </div>
        </div>
        {{!-- <div class="input-field">
            <input placeholder="Token search" id="search-for" type="text" class="validate">
            <a class="btn" id="token-search">Search</a>
        </div> --}}
        <h4 class="center-align">...and select from results below!</h4>
        <div id="searched-tokens"></div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Add Token</a>
    </div>
</div>

{{!-- Creates a socket listener for current game lobby --}}
<span id="game-id" data-id={{game}}></span>
<script src="/socket.io/socket.io.js"></script>
<script>
    let socket = io();
    socket.on("update", function (game) {
        if (game === $("#game-id").attr("data-id")) {
            window.location = `/arena/${game}`
        }
    });
</script>

{{!-- Tokens selector script  TODO:--}}
<script>
    // Tokens array will be populated on startup by database pull
    let tokensArr = [];
    $("#tokens-search").on("click", function () {
        // Token search term
        let searchFor = $("#search-for").val();
        // Filtering each object for the searchFor search term
        let filteredTokens = $.grep(tokensArr, (function (t) {
            return t.name.includes("searchFor")
        }))
    })

    // Display each token in a list that adds a class allowing them to be selected and added to a player's tray
    $.each(filteredTokens, function () {
        if (err) throw err
        $("#searched-tokens").append("<p>" + this.name + "</p><br><img class="'selectable'" src=" + this.img + " />");
    })

    // Attach a click handler to that class
    $(".selectable").on("click", function () {
        console.log("hey im not broken")

        // I think this is where we use a post request to tell the server this player is adding a token to their tray, and the page will auto-populate once the new gamestate object comes back.
    })
</script>